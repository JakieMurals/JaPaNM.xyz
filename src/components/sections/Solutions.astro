Solutions.astro
---
import { Image } from "astro:assets";
import Container from "../shared/Container.astro";
import Paragraph from "../shared/Paragraph.astro";
import Title from "../shared/Title.astro";
import GradiantText from "../shared/GradiantText.astro";
import { solutions } from "../../utils/data.ts";

type SolutionsProps = {
  title: string;
  painPoint: string;
  agitatepainPoint: string;
  solution: string;
  videoEmbed: string;
  img: ImageMetadata;
};

export interface Props {
  className?: string;
}

const { className } = Astro.props;
---

<script src="https://cdn.jsdelivr.net/npm/alpinejs@3.x.x/dist/cdn.min.js" defer></script>

<section id="solutions" class={`flex flex-col ${className}`}>
  {solutions.map((solution: SolutionsProps, index: number) => {
    const oddIndex = index % 2 === 0;
    const flexRow = oddIndex ? "midmd:flex-row-reverse" : "midmd:flex-row";
    const bgColor = oddIndex
      ? "bg-orange-100 dark:bg-gray-800"
      : "bg-transparent";

    return (
      <div class={`w-full py-10 md:py-16 ${bgColor}`}>
        <div
          class={`flex flex-col gap-1 lg:gap-1 ${flexRow} mx-auto max-w-7xl w-full`}
        >
          <!-- Text Content -->
          <div class="max-w-md mx-auto w-11/12 flex-1 flex midmd:w-7/12 lg:w-1/2 flex-col">
            <Title>
              <GradiantText>{solution.title}</GradiantText>
            </Title>
            <Paragraph className="mt-8 font-medium text-lg md:text-2xl">
{solution.painPoint}
            </Paragraph>
            <Paragraph className="mt-3">{solution.agitatepainPoint}</Paragraph>
            <Paragraph className="mt-3 font-medium">
{solution.solution}
            </Paragraph>
          </div>

          <!-- Image or Video Embed -->
          <div class="max-w-md mx-auto midmd:max-w-none lg:mx-0 lg:pr-10 xl:pr-2 flex-1 flex w-11/12 midmd:w-5/12 lg:w-1/2 midmd:h-auto relative">
            <div x-data="{ showVideo: false }" class="relative w-full h-0 pt-[56.25%] overflow-hidden rounded-3xl">
              
              <!-- Thumbnail -->
              <template x-if="!showVideo">
                <div class="absolute inset-0 cursor-pointer" @click="showVideo = true" >
                  <img
                    src={solution.img.src}
                    alt={solution.title}
                    class="w-full h-full object-cover rounded-3xl"
                  />
                  <!-- Minimalist Fade-In Play Button -->
                  <div class="absolute inset-0 flex justify-center items-center cursor-pointer" @click="showVideo = true" >
                    <div class="fade-button p-4 rounded-full flex justify-center items-center shadow-lg">
                      <svg class="w-8 h-8 text-white" fill="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                        <polygon points="5,3 19,12 5,21" />
                      </svg>
                    </div>
                  </div>
                </div>
              </template>

              <!-- Video Embed -->
              <template x-if="showVideo">
                <>
                  <iframe
                    src={solution.videoEmbed} 
                    class="absolute inset-0 w-full h-full rounded-3xl"
                    style="border: none;"
                    allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
                    allowfullscreen
                  ></iframe>
                </>
              </template>

            </div>
          </div>
        </div>
      </div>
    );
  })}
</section>

<style>
.fade-button {
  background: linear-gradient(135deg, rgba(75, 85, 255, 1) 20%, rgba(59, 130, 246, 1) 30%, rgba(34, 197, 94, 1) 100%);
  opacity: 0;
  animation: fadeIn 1s forwards;
  transition: background-position 0.6s ease, transform 0.3s ease; /* Smooth transition for background-position */
  background-size: 200% 200%; /* Start with a larger background */
}

.fade-button:hover {
  background-position: 100% 100%; /* Shift background position for a smooth transition */
  transform: scale(1.1); /* Slight zoom effect */
}


  @keyframes fadeIn {
    0% {
      opacity: 0;
    }
    100% {
      opacity: 1;
    }
  }
</style>
