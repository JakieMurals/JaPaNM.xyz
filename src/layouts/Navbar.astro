---
import Container from "../components/shared/Container.astro";
import Navitem from "../components/shared/Navitem.astro";
import BtnLink from "../components/shared/BtnLink.astro";

const navItems: Array<{ href: string; text: string }> = [
  {
    href: "#solutions",
    text: "Cinematography",
  },
  {
    href: "#services",
    text: "Camera Operation",
  },
  {
    href: "#features",
    text: "Editing",
  },
  {
    href: "#faq",
    text: "About",
  },
];

content: [
  "./src/**/*.{astro,html,js,jsx,ts,tsx}",
  "./public/**/*.html",
]
---

<header class="absolute inset-x-0 top-0 z-50 py-6">
  <Container>
    <nav class="w-full flex justify-between gap-10 relative">
      <!-- Logo -->
      <div class="min-w-max inline-flex relative">
        <a href="#faq" class="relative flex items-center gap-3">
          <div class="relative w-7 h-7 overflow-hidden flex rounded-xl">
            <img
              src="/JapanmLogo.png"
              alt=""
              class="w-full h-full object-contain"
            />
          </div>
          <div class="inline-flex text-lg font-semibold text-heading-1 bg-clip-text text-transparent bg-gradient-to-br from-indigo-600 via-primary to-green-600">
            JaPaNM
          </div>
        </a>
      </div>

      <!-- Navigation Links -->
      <div
  data-nav-overlay
  aria-hidden="true"
  class="fixed hidden inset-0 lg:!hidden bg-box-bg bg-opacity-50 backdrop-filter backdrop-blur-xl"
></div>
      <div
        data-navbar
        class=" flex h-0 overflow-hidden lg:!h-auto lg:scale-y-100 duration-300 ease-linear flex-col gap-y-6 gap-x-4 lg:flex-row w-full lg:justify-between lg:items-center absolute lg:relative top-full lg:top-0 bg-body/60 lg:bg-transparent border-x border-x-box-border lg:border-x-0 backdrop-filter backdrop-blur-sm"
      >
        <ul
          class="border-t border-box-border lg:border-t-0 px-6 lg:px-0 pt-6 lg:pt-0 flex flex-col lg:flex-row gap-y-4 gap-x-3 text-sm text-heading-2 w-full lg:justify-center lg:items-center"
        >
          {navItems.map((item) => {
            return <Navitem {...item} />;
          })}
        </ul>

        <!-- Get Connected Button -->
        <div
          class="lg:min-w-max flex items-center sm:w-max w-full pb-6 lg:pb-0 border-b border-box-bg lg:border-0 px-6 lg:px-0"
        >
          <BtnLink
            text="Get Connected"
            href="#cta"
            className="flex justify-center w-full sm:w-max"
            variant="primary"
          />
        </div>
      </div>

      <!-- Theme Toggle Button -->
      <div class="min-w-max flex items-center gap-x-4">
        <button
          aria-label="toggle theme"
          class="flex p-4 rounded-full text-fg active:children:rotate-90 dark:active:children:rotate-90 hover:bg-neutral-100 dark:hover:bg-neutral-800"
        >
          <span class="transition-all duration-300 ease-linear">
            <!-- Dark Mode Icon -->
            <svg
              xmlns="http://www.w3.org/2000/svg"
              width="20"
              height="20"
              fill="currentColor"
              class="hidden dark:flex"
              viewBox="0 0 16 16"
            >
              <path d="M8 11a3 3 0 1 1 0-6 3 3 0 0 1 0 6zm0 1a4 4 0 1 0 0-8 4 4 0 0 0 0 8zM8 0a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-1 0v-2A.5.5 0 0 1 8 0zm0 13a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-1 0v-2A.5.5 0 0 1 8 13zm8-5a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1 0-1h2a.5.5 0 0 1 .5.5zM3 8a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1 0-1h2A.5.5 0 0 1 3 8zm10.657-5.657a.5.5 0 0 1 0 .707l-1.414 1.415a.5.5 0 1 1-.707-.708l1.414-1.414a.5.5 0 0 1 .707 0zm-9.193 9.193a.5.5 0 0 1 0 .707L3.05 13.657a.5.5 0 0 1-.707-.707l1.414-1.414a.5.5 0 0 1 .707 0zm9.193 2.121a.5.5 0 0 1-.707 0l-1.414-1.414a.5.5 0 0 1 .707-.707l1.414 1.414a.5.5 0 0 1 0 .707zM4.464 4.465a.5.5 0 0 1-.707 0L2.343 3.05a.5.5 0 1 1 .707-.707l1.414 1.414a.5.5 0 0 1 0 .708z"></path>
            </svg>
            <!-- Light Mode Icon -->
            <svg
              xmlns="http://www.w3.org/2000/svg"
              width="20"
              height="20"
              fill="currentColor"
              class="flex dark:hidden"
              viewBox="0 0 16 16"
            >
              <path d="M6 .278a.768.768 0 0 1 .08.858 7.208 7.208 0 0 0-.878 3.46c0 4.021 3.278 7.277 7.318 7.277.527 0 1.04-.055 1.533-.16a.787.787 0 0 1 .81.316.733.733 0 0 1-.031.893A8.349 8.349 0 0 1 8.344 16C3.734 16 0 12.286 0 7.71 0 4.266 2.114 1.312 5.124.06A.752.752 0 0 1 6 .278zM4.858 1.311A7.269 7.269 0 0 0 1.025 7.71c0 4.02 3.279 7.276 7.319 7.276a7.316 7.316 0 0 0 5.205-2.162c-.337.042-.68.063-1.029.063-4.61 0-8.343-3.714-8.343-8.29 0-1.167.242-2.278.681-3.286z"></path>
              <path d="M10.794 3.148a.217.217 0 0 1 .412 0l.387 1.162c.173.518.579.924 1.097 1.097l1.162.387a.217.217 0 0 1 0 .412l-1.162.387a1.734 1.734 0 0 0-1.097 1.097l-.387 1.162a.217.217 0 0 1-.412 0l-.387-1.162A1.734 1.734 0 0 0 9.31 6.593l-1.162-.387a.217.217 0 0 1 0-.412l1.162-.387a1.734 1.734 0 0 0 1.097-1.097l.387-1.162zM13.863.099a.145.145 0 0 1 .274 0l.258.774c.115.346.386.617.732.732l.774.258a.145.145 0 0 1 0 .274l-.774.258a1.156 1.156 0 0 0-.732.732l-.258.774a.145.145 0 0 1-.274 0l-.258-.774a1.156 1.156 0 0 0-.732-.732l-.774-.258a.145.145 0 0 1 0-.274l.774-.258c.346-.115.617-.386.732-.732L13.863.1z"></path>
            </svg>
          </span>
        </button>
        <button
          data-toggle-nav
  data-open-nav="false"
  class="lg:hidden lg:invisible outline-none w-7 h-auto flex flex-col relative"
>
  <span
    id="line1"
    class="w-6 h-0.5 rounded-full bg-heading-2 transition-all duration-300 ease-linear"
  ></span>
  <span
    id="line2"
    class="w-6 origin-center mt-1 h-0.5 rounded-full bg-heading-2 transition-all duration-300 ease-linear"
  ></span>
  <span
    id="line3"
    class="w-6 mt-1 h-0.5 rounded-full bg-heading-2 transition-all duration-300 ease-linear"
  ></span>
  <span class="sr-only">toggle nav</span>
</button>

      </div>
    </nav>
  </Container>
</header>

<script type="module">
  // Check for saved theme in localStorage
  const savedTheme = localStorage.getItem("theme");

  // If no theme is saved, default to dark mode
  if (!savedTheme) {
    document.documentElement.classList.add("dark");
    localStorage.setItem("theme", "dark");
  } else if (savedTheme === "dark") {
    document.documentElement.classList.add("dark");
  } else {
    document.documentElement.classList.remove("dark");
  }

  // Theme toggle button functionality
  const themeToggleButton = document.querySelector("[aria-label='toggle theme']");
  themeToggleButton.addEventListener("click", () => {
    const isDarkMode = document.documentElement.classList.toggle("dark");
    localStorage.setItem("theme", isDarkMode ? "dark" : "light");
  });
</script>
